{"version":3,"file":"src_admin_3dmodv2_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAC+B;AACuC;AACO;AACQ;AACE;AACV;AACjB;AACJ;AACjB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,cAAc,UAAU,0EAA0E;AACvH;AACA,iCAAiC,+BAA+B,iBAAiB,aAAa,iGAAiG;;AAE/L;AACA,yBAAyB,oDAAuB,GAAG,gBAAgB;AACnE;;AAEA;AACA,YAAY,wCAAW;;AAEvB;AACA,aAAa,oDAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,8CAAiB;AACzC,qBAAqB,gDAAmB;AACxC;;AAEA;AACA,iBAAiB,gFAAU;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;;AAEV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,mBAAmB,gDAAmB;AACtC;AACA,KAAK;AACL;AACA;AACA,2BAA2B,wDAA2B;;AAEtD;;AAEA,gBAAgB,wCAAW;AAC3B,4BAA4B,uFAAU;;AAEtC;;AAEA,cAAc,0CAAa;;AAE3B;;AAEA,8BAA8B,gDAAmB;;AAEjD,gBAAgB,sEAAK;AACrB;AACA;AACA,wBAAwB,gDAAmB;AAC3C;AACA;AACA,0CAA0C,iDAAoB;AAC9D;AACA;AACA,wBAAwB,0CAAa;AACrC;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA,oBAAoB,kEAAG;AACvB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,iDAAoB;AACnD;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,sCAAS;AAC/B;AACA;;AAEA;AACA,kBAAkB,qDAAwB;AAC1C,oBAAoB,qDAAwB;;AAE5C;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,iGAAe;AACnC,UAAU,0CAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,+FAAc;AACtC;AACA;AACA;;AAEA,oBAAoB,uFAAU;AAC9B,UAAU,iDAAoB;AAC9B;AACA,yBAAyB,aAAa;AACtC,0BAA0B,4CAA4C;AACtE,SAAS;AACT;AACA;AACA,mBAAmB;AACnB,OAAO;AACP;AACA;;AAEA;;AAEA,wBAAwB,+FAAc;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,IAAI,CAAC;AACL,YAAY;AACZ;AACA,QAAQ,KAAK;AACb;AACA,IAAI,CAAC;AACL,YAAY,wCAAwC;AACpD;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM,oDAAW;AACjB;AACA,UAAU,CAAC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,0CAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,CAAC;AACH,EAAE,CAAC;AACH;AACA,EAAE,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA,EAAE,CAAC;AACH;AACA,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,QAAQ,CAAC,kCAAkC,CAAC;AAC5C,QAAQ,CAAC;AACT,SAAS,CAAC;AACV,IAAI,CAAC;AACL;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA,GAAG;;AAEH,EAAE,CAAC;AACH;AACA,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,QAAQ,CAAC,kCAAkC,CAAC;AAC5C,QAAQ,CAAC;AACT,SAAS,CAAC;AACV;AACA,IAAI,CAAC;AACL;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA,GAAG;;AAEH,EAAE,CAAC;AACH;AACA,IAAI,CAAC;AACL,IAAI,CAAC;AACL,IAAI,CAAC;AACL,QAAQ,CAAC;AACT,SAAS,CAAC;AACV,QAAQ,CAAC,sCAAsC,CAAC;AAChD;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,EAAE,CAAC;AACH;AACA;AACA,MAAM,CAAC;AACP,KAAK;AACL;AACA,MAAM,CAAC;AACP;AACA;;AAEA,EAAE,CAAC;AACH;AACA,QAAQ,CAAC;AACT;AACA;AACA,MAAM;AACN,IAAI,CAAC;AACL,GAAG;;AAEH,EAAE,CAAC;AACH;AACA;AACA,IAAI,CAAC;AACL,GAAG;AACH;AACA,EAAE,CAAC;AACH;AACA,UAAU,CAAC;AACX;AACA;AACA,QAAQ;AACR;AACA,GAAG;;AAEH,EAAE,CAAC;AACH;AACA;AACA;AACA,GAAG;;AAEH,EAAE,CAAC;AACH;AACA;AACA,MAAM,CAAC;AACP,KAAK;AACL;AACA,MAAM,CAAC;AACP;AACA;;AAEA,EAAE,CAAC;AACH;AACA,QAAQ,CAAC;AACT;AACA;AACA,MAAM;AACN,IAAI,CAAC;AACL,GAAG;AACH,EAAE,CAAC;AACH;AACA;AACA,IAAI,CAAC;AACL,GAAG;;AAEH;AACA,EAAE,CAAC;AACH;AACA,UAAU,CAAC;AACX;AACA;AACA,QAAQ;AACR;AACA,GAAG;;AAEH,EAAE,CAAC;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,CAAC;AACH,qBAAqB;AACrB,iBAAiB;AACjB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,gBAAgB,WAAW,qBAAqB,aAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACgC","sources":["webpack://daily_scenarios_sender/./src/admin/3dmodv2.js"],"sourcesContent":["// Imports\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { Water } from 'three/examples/jsm/objects/Water.js';\nimport { Sky } from 'three/examples/jsm/objects/Sky.js';\nimport { updateShips } from './app.js';\n\n// Declare variables\nlet camera, scene, renderer;\nlet water, sun;\nlet bloomPass, bloomComposer, finalComposer, finalPass;\nconst parameters = {\n  elevation: 0,\n  azimuth: 90,\n};\nconst fps = 30;\nlet now;\nlet then = Date.now();\nconst interval = 1000 / fps;\nlet delta;\n\n// Declare variable for controls\nlet zoomed = false;\nlet turnRate = 0;\n\n// Shader\n\nconst vShader =\n  'varying vec2 vUv; void main() { vUv = uv; gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}';\nconst fShader =\n  'uniform sampler2D baseTexture;uniform sampler2D bloomTexture;varying vec2 vUv;void main() {gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );}';\n\n// Create variable for selective bloom process\nconst darkMaterial = new THREE.MeshBasicMaterial({ color: 'black' });\nconst materials = {};\n\n// Create scene\nscene = new THREE.Scene();\n\n// Camera\ncamera = new THREE.PerspectiveCamera(\n  55,\n  window.innerWidth / window.innerHeight,\n  1,\n  20000\n);\ncamera.position.set(30, 30, 100);\n\n// audio\n\nconst audioLoader = new THREE.AudioLoader();\nconst listener = new THREE.AudioListener();\ncamera.add(listener);\n\n//Make each loader a promise\nvar loader = new GLTFLoader();\n\n// Create object with types of vessels and paths to audio\n\nconst fogSignals = {\n  PDV: 'assets/pdv-fog-signal.mp3',\n  SV: 'assets/lame-duck-fog-signal.mp3',\n  VEIF: 'assets/lame-duck-fog-signal.mp3',\n  NUC: 'assets/lame-duck-fog-signal.mp3',\n  RAM: 'assets/lame-duck-fog-signal.mp3',\n  anchorless100m: 'assets/at-anchor-less-than-100m.mp3',\n};\n\nconst loaderProm = (modelPath, relposXnm, relposYnm, course, name, type) => {\n  return new Promise((resolve, reject) => {\n    loader.load(\n      modelPath,\n      function (gltf) {\n        let model = gltf.scene;\n        model.position.set(convertPos(relposXnm), 0, convertPos(relposYnm));\n        // Three JS rotates anti-clockwise, subtract angles from Paper JS\n        model.rotation.y = -course;\n        model.name = name;\n        if (window.resVis) {\n          // Add audio\n          audioLoader.load(getAudioPath(type), function (buffer) {\n            const audio = new THREE.PositionalAudio(listener);\n            audio.setBuffer(buffer);\n            audio.setRefDistance(10);\n            audio.setLoop(true);\n            if (type == 'PDV') {\n              audio.offset = Math.random();\n            }\n            model.add(audio);\n            scene.add(model);\n          });\n        } else scene.add(model);\n\n        resolve('success');\n      },\n      undefined,\n      function (err) {\n        reject(err);\n      }\n    );\n  });\n};\n\nfunction buildThreeDRendering() {\n  //Rotate camera to own ships head\n  // - pi/2 as the orientation for Paper JS is 90 degrees different.\n  camera.rotation.y = -window.shipsAfloat[0].course - Math.PI / 2;\n  $('#base-wrapper').css(\n    'transform',\n    'rotate(' +\n      Math.round((shipsAfloat[0].course * 180) / Math.PI + 90) +\n      'deg)'\n  );\n\n  parameters.elevation = window.elevation;\n\n  // Start async loading models as soon as page loads\n  const totalLoader = new Promise((resolve, reject) => {\n    (async () => {\n      try {\n        //Loop through shipsAfloat and create a promise for each model loader\n        const proms = [];\n        window.shipsAfloat.slice(1).forEach((ship) => {\n          proms.push(\n            loaderProm(\n              'assets/' + ship.type + '.glb',\n              ship.relposXnm,\n              ship.relposYnm,\n              ship.course,\n              ship.name,\n              ship.type\n            )\n          );\n        });\n        const all = await Promise.all(proms);\n        resolve(all);\n      } catch (err) {\n        reject(err);\n      }\n    })();\n  });\n\n  // Intiate other elements\n  const init = new Promise((resolve, reject) => {\n    renderer = new THREE.WebGLRenderer({\n      canvas: ThreeDcanvas,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n\n    //\n\n    scene = new THREE.Scene();\n    const renderScene = new RenderPass(scene, camera);\n\n    //\n\n    sun = new THREE.Vector3();\n\n    // Water\n\n    const waterGeometry = new THREE.PlaneGeometry(100000, 100000);\n\n    water = new Water(waterGeometry, {\n      textureWidth: 512,\n      textureHeight: 512,\n      waterNormals: new THREE.TextureLoader().load(\n        'assets/waternormals.jpg',\n        function (texture) {\n          texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        }\n      ),\n      sunDirection: new THREE.Vector3(),\n      sunColor: 0xffffff,\n      waterColor: 0x001e0f,\n      distortionScale: 3.7,\n      fog: scene.fog !== undefined,\n    });\n\n    water.rotation.x = -Math.PI / 2;\n\n    scene.add(water);\n\n    // Skybox\n\n    const sky = new Sky();\n    sky.scale.setScalar(10000);\n    scene.add(sky);\n\n    const skyUniforms = sky.material.uniforms;\n\n    skyUniforms['turbidity'].value = 10;\n    skyUniforms['rayleigh'].value = 2;\n    skyUniforms['mieCoefficient'].value = 0.005;\n    skyUniforms['mieDirectionalG'].value = 0.8;\n\n    const pmremGenerator = new THREE.PMREMGenerator(renderer);\n    let renderTarget;\n\n    //Fog\n    if (window.resVis) {\n      skyUniforms['mieCoefficient'].value = 0.8;\n      skyUniforms['mieDirectionalG'].value = 0.5;\n      scene.fog = new THREE.Fog(0x484849, 1000, 1100);\n      parameters.elevation = 55.23;\n    }\n\n    function updateSun() {\n      const phi = THREE.MathUtils.degToRad(90 - parameters.elevation);\n      const theta = THREE.MathUtils.degToRad(parameters.azimuth);\n\n      sun.setFromSphericalCoords(1, phi, theta);\n\n      sky.material.uniforms['sunPosition'].value.copy(sun);\n      water.material.uniforms['sunDirection'].value.copy(sun).normalize();\n      water.material.blendDst = 2;\n\n      if (renderTarget !== undefined) renderTarget.dispose();\n\n      renderTarget = pmremGenerator.fromScene(sky);\n\n      scene.environment = renderTarget.texture;\n    }\n\n    updateSun();\n\n    // Bloom\n    bloomPass = new UnrealBloomPass(\n      new THREE.Vector2(window.innerWidth, window.innerHeight),\n      1.5,\n      0.4,\n      0.85\n    );\n    bloomPass.threshold = 0;\n    bloomPass.strength = 5;\n    bloomPass.radius = 1;\n\n    bloomComposer = new EffectComposer(renderer);\n    bloomComposer.renderToScreen = false;\n    bloomComposer.addPass(renderScene);\n    bloomComposer.addPass(bloomPass);\n\n    finalPass = new ShaderPass(\n      new THREE.ShaderMaterial({\n        uniforms: {\n          baseTexture: { value: null },\n          bloomTexture: { value: bloomComposer.renderTarget2.texture },\n        },\n        vertexShader: vShader,\n        fragmentShader: fShader,\n        defines: {},\n      }),\n      'baseTexture'\n    );\n\n    finalPass.needsSwap = true;\n\n    finalComposer = new EffectComposer(renderer);\n    finalComposer.addPass(renderScene);\n    finalComposer.addPass(finalPass);\n\n    //Make Canvas responsive\n    window.addEventListener('resize', () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      bloomComposer.setSize(window.innerWidth, window.innerHeight);\n      finalComposer.setSize(window.innerWidth, window.innerHeight);\n    });\n    window.addEventListener('orientationchange', () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      bloomComposer.setSize(window.innerWidth, window.innerHeight);\n      finalComposer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    // Instrument display\n\n    $('#course-display').append(\n      `<p>${addoos(\n        window.convertAngle(window.shipsAfloat[0].vector.angle).toFixed(1)\n      )}&deg;</p>`\n    );\n    $('#speed-display').append(\n      `<p>${window.shipsAfloat[0].speed.toFixed(1)} Kts</p>`\n    );\n\n    resolve('success');\n    reject('Error during intialization');\n    console.log(scene);\n  });\n\n  //Await init and animate to complete before animating\n\n  (async () => {\n    try {\n      await Promise.all([totalLoader, init]);\n      shipLightControl(parameters.elevation);\n      animate();\n      $('.threeOverlay').hide();\n      // startTime();\n      console.log(scene);\n    } catch (err) {\n      console.log(err);\n    }\n  })();\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  if (window.play === true) {\n    now = Date.now();\n    delta = now - then;\n\n    if (delta > interval) {\n      // update time variables\n      then = now - (delta % interval);\n\n      // update positions\n      // Update ships\n      updateShips(interval);\n      // Only call if three canvas is visible\n      if ($('#lookOut').is(':visible')) {\n        renderBloom();\n        render();\n        control();\n        showBrng();\n        shipLightControl(parameters.elevation);\n        // Animate ships movement\n        // Ship models can be found in scene.children\n        for (let i = 2; i < scene.children.length; i++) {\n          let shipName = scene.children[i].name;\n          // Find the index number for ship with the same name from the shipsAfloat array\n          // Defined in nameToIndex function\n          let indexNo = nameToIndex(shipName);\n          scene.children[i].position.set(\n            convertPos(window.shipsAfloat[indexNo].relposXnm),\n            0,\n            convertPos(window.shipsAfloat[indexNo].relposYnm)\n          );\n          // If after sunset or before sunrise control directional lights\n          if (parameters.elevation < 2 || parameters.elevation > 178) {\n            dLights(indexNo, scene.children[i]);\n          }\n          overHorizon(indexNo, scene.children[i]);\n          //Audio\n          if ((shipName = '003')) {\n            // Get audio element (last element in the model)\n            const audio =\n              scene.children[i].children[scene.children[i].children.length - 1];\n            if (audio.isPlaying == false) {\n              audio.play();\n            }\n          }\n        }\n      }\n    }\n  }\n}\n// Other functions\n\n// If ship over 11nm away make invisible\nfunction overHorizon(indexNo, shipObject) {\n  if (window.shipsAfloat[indexNo].range > 11) shipObject.visible = false;\n  else shipObject.visible = true;\n}\n\n// Turn directional lights on/off;\nfunction dLights(indexNo, shipObject) {\n  const shipUSN = window.shipsAfloat[indexNo].USNRel;\n  shipObject.traverse((el) => {\n    // Starboard side light\n    if (\n      el.name.includes('SG') &&\n      ((shipUSN > 0 && shipUSN < 112.5) || (shipUSN > 354 && shipUSN < 360))\n    )\n      el.visible = true;\n    if (el.name.includes('SG') && shipUSN > 112.5 && shipUSN < 354)\n      el.visible = false;\n    // Port side light\n    if (\n      el.name.includes('SR') &&\n      ((shipUSN > 247.5 && shipUSN < 360) || (shipUSN > 0 && shipUSN < 4))\n    )\n      el.visible = true;\n    if (el.name.includes('SR') && shipUSN > 4 && shipUSN < 247.5)\n      el.visible = false;\n    // Mast Head light\n    if (\n      el.name.includes('MH') &&\n      ((shipUSN > 247.5 && shipUSN < 360) || (shipUSN > 0 && shipUSN < 112.5))\n    )\n      el.visible = true;\n    if (el.name.includes('MH') && shipUSN > 112.5 && shipUSN < 247.5)\n      el.visible = false;\n    // Stern light\n    if (el.name.includes('STRN') && shipUSN > 112.5 && shipUSN < 247.5)\n      el.visible = true;\n    if (el.name.includes('STRN') && shipUSN > 0 && shipUSN < 112.5)\n      el.visible = false;\n    if (el.name.includes('STRN') && shipUSN > 247.5 && shipUSN < 360)\n      el.visible = false;\n  });\n}\n\n// ShipsAfloat and Scene do not have the ships in the same order. There for match name to index.\nfunction nameToIndex(shipName) {\n  return window.shipsAfloat.findIndex(function checkName(array) {\n    return array.name == shipName;\n  });\n}\n// Ship Lights functions\n\nfunction shipLightControl(elevation) {\n  // Turn off lights after sun rise and before sun set\n  scene.traverse((obj) => {\n    if (obj.name.includes('light') && elevation > 2 && elevation < 178) {\n      obj.visible = false;\n    } else if (obj.name.includes('light')) obj.visible = true;\n  });\n}\n\nfunction control() {\n  //Zoomed variable\n  if (!zoomed) {\n    camera.fov = 45;\n    camera.updateProjectionMatrix();\n  } else {\n    camera.fov = 20;\n    camera.updateProjectionMatrix();\n  }\n\n  camera.rotation.y += turnRate;\n}\n\n//Bearing Display\n// Add 00s for compass bearing\nfunction addoos(bearing) {\n  var BrngAsString;\n  // Add 0s when required\n  if (bearing >= 100) return bearing;\n  else if (bearing > 9) {\n    BrngAsString = '0' + bearing;\n    return BrngAsString;\n  } else {\n    BrngAsString = '00' + bearing;\n    return BrngAsString;\n  }\n}\n\nlet currentBearing = '';\n\nfunction showBrng() {\n  let vector = new THREE.Vector3();\n  camera.getWorldDirection(vector);\n  // Add Pi/2 to get back to north up orientation.\n  let radians = Math.atan2(vector.z, vector.x) + Math.PI / 2;\n  // Convert to bearing for bearing logger\n  if (radians < 0) radians += 2 * Math.PI;\n  currentBearing = Math.round((radians * 180) / Math.PI);\n  // Create an array of bearings 1 degree apart\n  let bearings = [\n    radians - 0.035,\n    radians - 0.0175,\n    radians,\n    radians + 0.0175,\n    radians + 0.035,\n  ];\n  // Convert all radians to degrees add 00s and convert to strings\n  bearings.forEach(function (bearing, index) {\n    // Add 90 degrees\n    if (bearing < 0) bearing += 2 * Math.PI;\n    let rounded = Math.round((bearing * 180) / Math.PI);\n    bearings[index] = addoos(rounded);\n  });\n  $('#orientator').css('transform', 'rotate(' + bearings[2] + 'deg)');\n  $('#vis-bearing').text('');\n  bearings[2] = '<span id=fcsBrng>' + bearings[2] + '</span>';\n  $('#vis-bearing').append(bearings.join('  '));\n}\n\n//Scale 12NM = 12000M\nfunction convertPos(pos) {\n  var b = pos * 1000;\n  return b;\n}\n\n// Create clock\n// Generate night hour\nfunction makeNightTime() {\n  const myArray = [0, 1, 2, 3, 4, 20, 21, 22, 23];\n  let randomValue = myArray[Math.floor(Math.random() * myArray.length)];\n  return randomValue;\n}\n\nlet h = makeNightTime();\nh = checkTime(h);\n\nfunction checkTime(i) {\n  if (i < 10) {\n    i = '0' + i;\n  } // add zero in front of numbers < 10\n  return i;\n}\n\nfunction render() {\n  const time = performance.now() * 0.001;\n  if (water.material.uniforms) {\n    water.material.uniforms['time'].value += 1.0 / 60.0;\n  }\n\n  renderer.render(scene, camera);\n  // render scene with bloom\n  renderBloom(true);\n  // render the entire scene, then render bloom scene on top\n  finalComposer.render();\n}\n\n// Blacking out scene and then restoring\nfunction renderBloom(mask) {\n  scene.traverse(darkenNonBloomed);\n  bloomComposer.render();\n  scene.traverse(restoreMaterial);\n}\n\nfunction darkenNonBloomed(obj) {\n  if (obj.isMesh && !obj.name.includes('light')) {\n    materials[obj.uuid] = obj.material;\n    obj.material = darkMaterial;\n  }\n}\n\nfunction restoreMaterial(obj) {\n  if (materials[obj.uuid]) {\n    obj.material = materials[obj.uuid];\n    delete materials[obj.uuid];\n  }\n}\n\nconst getAudioPath = function (type) {\n  return fogSignals[type];\n};\n\nconst playAudio = function () {\n  console.log('Fired play audio');\n  scene.traverse((obj) => {\n    if (obj.type == 'Audio') {\n      console.log(obj);\n      obj.context.resume();\n    }\n  });\n};\n// On document ready\n$(function () {\n  // Change view\n  $('#zoom-view').on('touchstart mousedown', function () {\n    zoomed = true;\n    $('#zoom-view').addClass('view-selected');\n    $('#eye-view').removeClass('view-selected');\n    $('#compass-view').removeClass('view-selected');\n    if ($('#compass-cont').is(':visible')) $('#compass-cont').toggle();\n    if ($('#instrument-panel').is(':visible'));\n    else $('#instrument-panel').toggle();\n    $('#left-arrow i')\n      .addClass('fa-duotone fa-chevrons-left')\n      .removeClass('fa-regular fa-chevron-left');\n    $('#right-arrow i')\n      .addClass('fa-duotone fa-chevrons-right')\n      .removeClass('fa-regular fa-chevron-right');\n  });\n\n  $('#eye-view').on('touchstart mousedown', function () {\n    zoomed = false;\n    $('#eye-view').addClass('view-selected');\n    $('#zoom-view').removeClass('view-selected');\n    $('#compass-view').removeClass('view-selected');\n    if ($('#compass-cont').is(':visible')) $('#compass-cont').toggle();\n    if ($('#instrument-panel').is(':visible'));\n    else $('#instrument-panel').toggle();\n    // Change arrows\n    $('#left-arrow i')\n      .addClass('fa-duotone fa-chevrons-left')\n      .removeClass('fa-regular fa-chevron-left');\n    $('#right-arrow i')\n      .addClass('fa-duotone fa-chevrons-right')\n      .removeClass('fa-regular fa-chevron-right');\n  });\n\n  $('#compass-view').on('touchstart mousedown', function () {\n    zoomed = false;\n    $('#eye-view').removeClass('view-selected');\n    $('#zoom-view').removeClass('view-selected');\n    $('#compass-view').addClass('view-selected');\n    if ($('#compass-cont').is(':visible'));\n    else $('#compass-cont').toggle();\n    if ($('#instrument-panel').is(':visible')) $('#instrument-panel').toggle();\n    bearingLogger(true);\n    // Change arrows\n    $('#left-arrow i')\n      .addClass('fa-regular fa-chevron-left')\n      .removeClass('fa-duotone fa-chevrons-left');\n    $('#right-arrow i')\n      .addClass('fa-regular fa-chevron-right')\n      .removeClass('fa-duotone fa-chevrons-right');\n  });\n\n  // Camera Controls\n\n  // Controls\n  $('#left-arrow').on(\n    'hover',\n    function (e) {\n      $(this).css('color', 'rgba(255, 255, 255, 1)');\n    },\n    function () {\n      $(this).css('color', 'rgba(255, 255, 255, 0.75)');\n    }\n  );\n\n  $('#left-arrow').on('touchstart mousedown', function (e) {\n    e.preventDefault();\n    if ($('#compass-cont').is(':visible')) {\n      turnRate = 0.0009;\n      bearingLogger();\n    } else turnRate = 0.01;\n    $(this).css('color', 'rgba(255, 255, 255, 1)');\n  });\n\n  $('#left-arrow').on('touchend mouseup', function (e) {\n    e.preventDefault();\n    turnRate = 0;\n    $(this).css('color', 'rgba(255, 255, 255, 0.75)');\n  });\n  // Keys\n  $(document).on('keydown', function (e) {\n    if (e.which == 37) {\n      if ($('#compass-cont').is(':visible')) {\n        turnRate = 0.0009;\n        bearingLogger();\n      } else turnRate = 0.01;\n    }\n  });\n\n  $(document).on('keyup', function (e) {\n    if (e.which == 37) {\n      turnRate = 0;\n    }\n  });\n\n  $('#right-arrow').on(\n    'hover',\n    function (e) {\n      $(this).css('color', 'rgba(255, 255, 255, 1)');\n    },\n    function () {\n      $(this).css('color', 'rgba(255, 255, 255, 0.75)');\n    }\n  );\n\n  $('#right-arrow').on('touchstart mousedown', function (e) {\n    e.preventDefault();\n    if ($('#compass-cont').is(':visible')) {\n      turnRate = -0.0009;\n      bearingLogger();\n    } else turnRate = -0.01;\n    $(this).css('color', 'rgba(255, 255, 255, 1)');\n  });\n  $('#right-arrow').on('touchend mouseup', function (e) {\n    e.preventDefault();\n    turnRate = 0;\n    $(this).css('color', 'rgba(255, 255, 255, 0.75)');\n  });\n\n  //Keys\n  $(document).on('keydown', function (e) {\n    if (e.which == 39) {\n      if ($('#compass-cont').is(':visible')) {\n        turnRate = -0.0009;\n        bearingLogger();\n      } else turnRate = -0.01;\n    }\n  });\n\n  $(document).on('keyup', function (e) {\n    if (e.which == 39) {\n      turnRate = 0;\n    }\n  });\n  // Call for bearing logger and playAudio\n  $('#lookout-button').on('touchstart mousedown', function () {\n    bearingLogger(); // Check if bearing is being taken. This is to capture occasions when the compass is left displayed and view is changed from and then back to look out.\n    playAudio(); //\n  });\n});\n///// Bearing Logger ////\nlet currentTime = '';\nconst bearingLogger = function (clickedCompass) {\n  // Only log when using compass\n  const timeAtLastClick = currentTime;\n  currentTime = Date.now();\n  // Time since last rotation click\n  const dwellTime = currentTime - timeAtLastClick;\n\n  // Check if bearing has been taken\n  window.shipsAfloat.slice(1).forEach((ship) => {\n    // Get absolute difference between currentBearing and ship bearing\n    const bearingDiff = Math.abs(\n      convertAngle(Math.round(ship.vecOwnShip.angle)) - currentBearing\n    );\n    if (dwellTime > 1000 && bearingDiff < 3) {\n      -console.log(\n        `bearingDiff = ${bearingDiff} | dwellTime = ${dwellTime} |  actualBearing = ${ship.bearing}`\n      );\n      ship.bearingsTaken.push(timeAtLastClick);\n    }\n    // Change to compass view already on the right bearing \"clickedCompass\"\n    // Ignore dwellTime\n    if (clickedCompass && bearingDiff < 4) {\n      ship.bearingsTaken.push(currentTime);\n    }\n  });\n};\nexport { buildThreeDRendering };\n"],"names":[],"sourceRoot":""}